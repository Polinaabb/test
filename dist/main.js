(()=>{"use strict";document.addEventListener("DOMContentLoaded",(function(){const t=document.querySelector(".elements__timer_hours"),e=document.querySelector(".elements__timer_minutes"),o=document.querySelector(".elements__timer_seconds");let n=600;function r(){const r=Math.floor(n/3600),s=Math.floor(n%3600/60),c=n%60;if(t.textContent=r.toString().padStart(2,"0"),e.textContent=s.toString().padStart(2,"0"),o.textContent=c.toString().padStart(2,"0"),n--,n<0){n=600;const t=document.querySelector(".elements__timer");t.classList.add("timer-reset"),setTimeout((()=>t.classList.remove("timer-reset")),1e3)}}r(),setInterval(r,1e3)})),document.querySelector(".elements__checkbox_button").addEventListener("click",(function(){this.classList.toggle("active");const t=this.classList.contains("active");this.setAttribute("aria-checked",t)})),document.addEventListener("DOMContentLoaded",(function(){const t=document.querySelector(".elements__slider-container"),e=document.querySelector(".elements__cards.slider");if(!e||!t)return void console.error("Slider elements not found!");const o=Array.from(document.querySelectorAll(".elements__card"));if(!o.length)return void console.error("No cards found!");function n(){const n=o[0],r=window.getComputedStyle(n),s=n.offsetWidth+parseInt(r.marginLeft)+parseInt(r.marginRight),c=t.offsetWidth;return{cardWidth:s,containerWidth:c,centerOffset:Math.max(0,(c-s)/2),maxScroll:e.scrollWidth-c}}o.forEach((t=>{t.style.opacity="1",t.style.pointerEvents="auto",t.style.transform="scale(1)"}));let r=n();const s=document.createElement("div");function c(){if(!i())return void o.forEach((t=>{t.style.opacity="1",t.style.pointerEvents="auto",t.style.transform="scale(1)"}));const t=function(){r=n();const t=e.scrollLeft;return t>=r.maxScroll-10?o.length-1:Math.min(Math.round((t+r.centerOffset)/r.cardWidth),o.length-1)}();document.querySelectorAll(".slider-dot").forEach(((e,o)=>{e.classList.toggle("active",o===t)})),o.forEach(((e,o)=>{const n=o===t;e.style.opacity=n?"1":"0",e.style.pointerEvents="auto",e.style.transform=n?"scale(1)":"scale(0.95)",e.style.transition="all 0.3s ease"}))}let l;function i(){return window.innerWidth<=768}function a(){r=n(),i()?(e.style.overflowX="auto",e.style.scrollSnapType="x mandatory",c()):(e.style.overflowX="hidden",e.style.scrollSnapType="none",o.forEach((t=>{t.style.opacity="1",t.style.pointerEvents="auto",t.style.transform="none"})))}s.className="slider-dots",t.appendChild(s),o.forEach(((t,o)=>{const c=document.createElement("button");c.className="slider-dot",0===o&&c.classList.add("active"),c.addEventListener("click",(()=>{r=n();const t=Math.min(o*r.cardWidth-r.centerOffset,r.maxScroll);e.scrollTo({left:t,behavior:"smooth"})})),s.appendChild(c)})),o.forEach(((t,o)=>{t.addEventListener("click",(function(t){if(parseFloat(this.style.opacity)<1){r=n();const s=Math.min(o*r.cardWidth-r.centerOffset,r.maxScroll);e.scrollTo({left:s,behavior:"smooth"}),t.preventDefault()}}))})),e.addEventListener("scroll",(()=>{i()&&(clearTimeout(l),l=setTimeout((()=>{requestAnimationFrame(c)}),100))})),window.addEventListener("resize",a),a(),setTimeout((()=>{e.scrollTo({left:0,behavior:"auto"}),c()}),150)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,